[{"K:\\react-udemy\\code-prac\\task-list\\src\\index.js":"1","K:\\react-udemy\\code-prac\\task-list\\src\\App.js":"2","K:\\react-udemy\\code-prac\\task-list\\src\\components\\NewTask\\NewTask.js":"3","K:\\react-udemy\\code-prac\\task-list\\src\\components\\Tasks\\Tasks.js":"4","K:\\react-udemy\\code-prac\\task-list\\src\\components\\Tasks\\TaskItem.js":"5","K:\\react-udemy\\code-prac\\task-list\\src\\components\\NewTask\\TaskForm.js":"6","K:\\react-udemy\\code-prac\\task-list\\src\\components\\UI\\Section.js":"7","K:\\react-udemy\\code-prac\\task-list\\src\\hooks\\useHttp.ts":"8"},{"size":179,"mtime":1663147023112,"results":"9","hashOfConfig":"10"},{"size":1068,"mtime":1663153598836,"results":"11","hashOfConfig":"10"},{"size":978,"mtime":1663154724002,"results":"12","hashOfConfig":"10"},{"size":704,"mtime":1663147023215,"results":"13","hashOfConfig":"10"},{"size":164,"mtime":1663147023199,"results":"14","hashOfConfig":"10"},{"size":757,"mtime":1663149138544,"results":"15","hashOfConfig":"10"},{"size":176,"mtime":1663147023181,"results":"16","hashOfConfig":"10"},{"size":1014,"mtime":1663304741439,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"x6vy1z",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"K:\\react-udemy\\code-prac\\task-list\\src\\index.js",[],["38","39"],"K:\\react-udemy\\code-prac\\task-list\\src\\App.js",["40"],"import React, { useEffect, useState } from \"react\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useHttp from \"./hooks/useHttp.ts\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  \n  const {isLoading, error, sendRequest: fetchTasks} = useHttp();\n  \n  useEffect(() => {\n    const trandformTasks = (taskObj) => {\n      const loadedTasks = [];\n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n      }\n      setTasks(loadedTasks);\n    };\n    fetchTasks({\n      url: \"https://react-http-c0ab7-default-rtdb.firebaseio.com/tasks.json\",\n    }, trandformTasks);\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n    // fetchTasks();\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","K:\\react-udemy\\code-prac\\task-list\\src\\components\\NewTask\\NewTask.js",["41"],"import { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/useHttp.ts\";\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n\n  const createTask = (taskText, data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  }\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({\n      url: 'https://react-http-c0ab7-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: { text: taskText }\n    }, createTask.bind(null, taskText));\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","K:\\react-udemy\\code-prac\\task-list\\src\\components\\Tasks\\Tasks.js",[],"K:\\react-udemy\\code-prac\\task-list\\src\\components\\Tasks\\TaskItem.js",[],"K:\\react-udemy\\code-prac\\task-list\\src\\components\\NewTask\\TaskForm.js",["42"],"import { useRef, useState } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const [taskName, setTaskName] = useState('');\n  const taskInputRef = useRef();\n\n  const taskNameHandler = (event) => {\n    setTaskName(event.target.value);\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskName;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n      setTaskName('');\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' value={taskName} onChange={taskNameHandler} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","K:\\react-udemy\\code-prac\\task-list\\src\\components\\UI\\Section.js",[],"K:\\react-udemy\\code-prac\\task-list\\src\\hooks\\useHttp.ts",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":23,"column":6,"nodeType":"49","endLine":23,"endColumn":8,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":18},{"ruleId":"51","severity":1,"message":"55","line":7,"column":9,"nodeType":"53","messageId":"54","endLine":7,"endColumn":21},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTasks'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'taskInputRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [fetchTasks]",{"range":"61","text":"62"},[695,697],"[fetchTasks]"]